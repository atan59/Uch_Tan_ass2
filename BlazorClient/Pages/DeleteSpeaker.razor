@page "/delete/{speakerId}"
@inject HttpClient httpClient
@inject NavigationManager NavManager

<h1>Delete Speaker</h1>
<hr />

<p>Are you sure you want to delete the speaker with the following ID: @speakerId?</p>

@if (currentSpeaker == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <button @onclick="@GoBack" class="btn btn-info">Back</button>
        <EditForm Model="@currentSpeaker" OnValidSubmit="@HandleDelete">
            <DataAnnotationsValidator />
            <ValidationSummary />
            
            <label for="firstName">First Name:</label>
            <br />
            <InputText disabled placeholder="First Name" id="firstName" @bind-Value="@currentSpeaker.FirstName" />
            <br />
            <label for="lastName">Last Name:</label>
            <br />
            <InputText disabled placeholder="Last Name" id="lastName" @bind-Value="@currentSpeaker.LastName" />
            <br />
            <label for="email">Email:</label>
            <br />
            <InputText disabled placeholder="Email" id="email" @bind-Value="@currentSpeaker.Email" />
            <br />
            <label for="mobileNumber">Mobile Number:</label>
            <br />
            <InputText disabled placeholder="Mobile Number" id="mobileNumber" @bind-Value="@currentSpeaker.MobileNumber" />
            <br />
            <label for="specialization">Specialization:</label>
            <br />
            <InputText disabled placeholder="Specialization" id="specialization" @bind-Value="@currentSpeaker.Specialization" />
            <br />
            <label for="city">City of Residence:</label>
            <br />
            <InputText disabled placeholder="City of Residence" id="city" @bind-Value="@currentSpeaker.City" />
            <br />
            <label for="province">Province of Residence:</label>
            <br />
            <InputText disabled placeholder="Province of Residence" id="province" @bind-Value="@currentSpeaker.Province" />
            <br />
            <label for="employer">Employer:</label>
            <br />
            <InputText disabled placeholder="Employer" id="employer" @bind-Value="@currentSpeaker.Employer" />
            <br />
            <button class="btn btn-danger" type="submit" value="Delete">Delete</button>

            @code {
            private Speaker speaker = new Speaker();

            protected async void HandleDelete()
            {
                string endpoint = $"{baseUrl}api/Speakers/{speakerId}";
                await httpClient.DeleteAsync(endpoint);
                StateHasChanged();
                GoBack();
            }
        }
    </EditForm>
</div>
}

@code {
    [Parameter]
    public string speakerId { get; set; }

    Speaker currentSpeaker;
    string baseUrl = "http://localhost:3000/";

    protected override async Task OnInitializedAsync()
    {
        await load();
    }

    protected async Task load()
    {
        currentSpeaker = await httpClient.GetFromJsonAsync<Speaker>($"{baseUrl}api/Speakers/{speakerId}");
    }

    protected void GoBack()
    {
        NavManager.NavigateTo("/");
    }
}